name: Blue-Green Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies and build the app
        env:
          GH_PAGES: true
        run: |
          npm ci
          npm run build

          # Stash any local changes, including untracked files
          git stash save --include-untracked

      - name: Deploy to GitHub Pages
        env:
          ACTIONS_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        run: |
          # git config user.name "github-actions"
          # git config user.email "github-actions@users.noreply.github.com"

          # # Stash any local changes, including untracked files
          # git stash save --include-untracked

          # Determine the current branch (blue or green)
          current_branch=$(curl -s -H "Authorization: token $ACTIONS_TOKEN" https://api.github.com/repos/${{ github.repository }}/pages | jq -r .source.branch)
          echo $current_branch
          if [ "$current_branch" = "gh-pages-blue" ]; then
            echo "green"
            target_branch="gh-pages-green"
          else
            echo "blue"
            target_branch="gh-pages-blue"
          fi

          TARGET_BRANCH=$target_branch npm run gh-pages

          # # Check if the branch exists and create it only if it does not
          # branch_exists=$(git ls-remote --heads origin $target_branch | wc -l)
          # if [ $branch_exists -eq 0 ]; then
          #   git checkout -b $target_branch
          # else
          #   git fetch origin $target_branch:$target_branch
          #   git checkout $target_branch
          # fi
          # git remote set-url origin "https://${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.repository }}.git"

          # echo $target_branch
          # git branch
          # ls

          # git add .
          # if [ -n "$(git status --porcelain)" ]; then
          #   git commit -m 'Update GitHub Pages'
          #   git push origin $target_branch
          # else
          #   echo "No changes to commit"
          # fi

          # # Update the GitHub Pages source branch
          # curl -X PATCH -H "Authorization: token $ACTIONS_TOKEN" \
          #   -H "Accept: application/vnd.github+json" \
          #   https://api.github.com/repos/${{ github.repository }}/pages \
          #   -d "{\"source\":{\"branch\":\"${target_branch}\",\"path\":\"/\"}}"